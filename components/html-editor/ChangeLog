2000-10-09  Larry Ewing  <lewing@helixcode.com>

	* resolver.c (resolver_load_from_file): remove unused variable.

	* test-html-editor-control.c (container_create): add cast.

2000-10-09  Michael Meeks  <michael@helixcode.com>

	* html-editor-control.xml: cmd/widgetify; needs Bonobo HEAD.

2000-10-06  Larry Ewing  <lewing@helixcode.com>

	* resolver.c (impl_HTMLEditor_Resolver_loadURL): actually listen
	to the results of the file load and init and free the environment.
	This makes it very clear that we need more exception types for the
	resolver.

	* editor-control-factory.c (load_from_corba): clean up the login a
	little.
	
2000-10-06  Radek Doulik  <rodo@helixcode.com>

	* menubar.c (insert_image_cb): added link properties while
	inserting image
	(insert_link_cb): added text properties while inserting link

2000-10-06  Larry Ewing  <lewing@helixcode.com>

	* resolver.c (impl_HTMLEditor_Resolver_loadURL): only set the
	exception if we don't know how to open the file.

	* resolver-progressive-impl.c (resolver_sink_add_data): actually
	write the incomming data to the stream.

	* editor-control-factory.c (load_from_corba): use proper return
	valuse if the corba loading is successfull.

2000-10-06  Radek Doulik  <rodo@helixcode.com>

	* properties.c: add title to GtkHTMLEditPropertiesDialog
	(gtk_html_edit_properties_dialog_new): added title parameter
	(switch_page): new signal

	* menubar.c (insert_image_cb): use GTK_HTML_EDIT_PROPERTY_IMAGE,
	not GTK_HTML_EDIT_PROPERTY_LINK
	(insert_image_cb): fix title
	(insert_link_cb): fix title

	* popup.c (popup_show): use GTK_HTML_EDIT_PROPERTY_IMAGE for image
	instead of GTK_HTML_EDIT_PROPERTY_PARAGRAPH

	* image.c (image_properties): don't use cd->obj here, use
	cd->html->engine->cursor->object instead
	added HTMLImage   *image; to GtkHTMLEditImageProperties
	(insert_or_apply): use GtkHTMLEditImageProperties::image here
	removed old code 

2000-10-06  Larry Ewing  <lewing@helixcode.com>

	* resolver-progressive-impl.[ch]: files added. The start of the
	progressive data sink implmentation.

	* resolver.c (impl_HTMLEditor_Resolver_loadURL): change prototype
	to match the new idl, and add some test code to try out the sink
	interface.

	* editor-control-factory.c (load_from_corba): pass the html widget
	along too.
	(url_requested_cb): pass the html widget.
	(load_from_corba): create the sink add pass it in the loadURL
	call.

	* Makefile.am (html_editor_control_SOURCES): add
	resolver-progressive-impl.[ch]

	* HTMLEditor.idl: Change the loadURL prototype to use the
	ProgressiveDataSink interface.

2000-10-05  Larry Ewing  <lewing@helixcode.com>

	* test-html-editor-control.c (container_create): attach the
	resolver to the control frame now that the component expects it
	there.

	* editor-control-factory.c (load_from_corba): fix the extreme
	brokeness involving the uih.  Now we try to resolve the interface
	through the control frame.

2000-10-05  Michael Meeks  <michael@helixcode.com>

	* toolbar.c (toolbar_setup): upd.

	* menubar.c (menubar_setup): upd.

2000-10-04  Michael Meeks  <michael@helixcode.com>

	* menubar.c (menubar_setup): simplify with new helper.

2000-09-21  Michael Meeks  <michael@helixcode.com>

	* editor-control-factory.c (set_frame_cb): upd.

2000-09-28  Larry Ewing  <lewing@helixcode.com>

	* Makefile.am: fix broken referencing of html-editor-control.xml

2000-09-26  Radek Doulik  <rodo@helixcode.com>

	* menubar.c (menubar_setup): use BonoboUINode instead of xmlNode,
	because of Bonobo changes

	* editor-control-factory.c: add ref counting, unfortunately
	control isn't destroyed right way and we don't get destroy signal
	from it

2000-09-24  Larry Ewing  <lewing@helixcode.com>

	* editor-control-factory.c (load_from_corba): 
	(set_frame_cb): change prototype to Bonobo_Unknown so that things
	build with the latest bonobo.

2000-09-16  Michael Meeks  <michael@helixcode.com>

	* Makefile.am (-DGNOMEDATADIR): add.

	* menubar.c (menubar_setup): use it.

2000-09-14  Radek Doulik  <rodo@helixcode.com>

	* menubar.c (properties_cb): run editor capplet

2000-09-07  Michael Meeks  <michael@helixcode.com>

	* Makefile.am: add .xml install

	* menubar.c: Update for new UI code.

	* test-html-editor-control.c: Update for new UI code

2000-09-08  Radek Doulik  <rodo@helixcode.com>

	* toolbar.c (setup_font_size_option_menu): hide +5 size

2000-08-18  Larry Ewing  <lewing@helixcode.com>

	* toolbar.c (paragraph_style_menu_item_activated_cb): remove
	warning that printed out the value of the new style.

2000-08-14  Radek Doulik  <rodo@helixcode.com>

	* editor-control-factory.c (html_button_pressed): use
	Ctrl-Button1-2xclick for object properties

2000-08-13  Ettore Perazzoli  <ettore@helixcode.com>

	* spell.c (select_row): Don't segfault on a NULL event, as stupid
	GtkClist does synthesize that.

2000-08-10  Radek Doulik  <rodo@helixcode.com>

	* popup.c (spell_suggest): added suggestions to popup menu

2000-08-10  Larry Ewing  <lewing@helixcode.com>

	* editor-control-factory.c (load_from_corba): fix some brokeness
	and warnings, and comment out debug messages.

	* resolver.c: fix some warnings.

2000-08-10  Radek Doulik  <rodo@helixcode.com>

	* spell.c (destroy): do replacing only if replacement selected
	(select_row): added select row handler - now replacement could be
	selected by mouse from suggestions list

2000-07-28  Ettore Perazzoli  <ettore@helixcode.com>

	* Makefile.am: Updated so that it works when bonobo is installed
	on a different prefix.

2000-07-24  Larry Ewing  <lewing@helixcode.com>

	Makefile.am: generate the stubs.
	
	* HTMLEditor.idl, resolver.c, resolver.h: added for the trial
	corba interface.
	
	* editor-control-factory.c (load_from_corba): use the corba
	resolver.

2000-07-21  Larry Ewing  <lewing@helixcode.com>

	* editor-control-factory.c (load_from_file): close the stream and
	the file when we are done with it.

	* popup.c (popup_show): remove the incorrect dereferences of the
	url and target strings in the test to stop the crashes.

2000-07-20  Radek Doulik  <rodo@helixcode.com>

	* spell.c: new file, popup window with spell checker suggestions

	* spell.h: new file

2000-07-17  Pavel Cisler  <pavel@eazel.com>

	* Makefile.am:
	Fix a hard dependency on pspell, making it build if you don't have
	pspell installed.
	Radek broke that earlier today and forgot to add a ChangeLog entry 
	about it.

2000-07-15  Larry Ewing  <lewing@helixcode.com>

	* editor-control-factory.c (editor_control_factory): connect to
	url_requested.
	(url_requested_cb): try to load_from_file.
	(load_from_file): rough code to load file to stream.

2000-07-11  Radek Doulik  <rodo@helixcode.com>

	* toolbar.c (setup_font_size_option_menu): added font size option
	menu + another one insertion style changed cb

2000-07-10  Radek Doulik  <rodo@helixcode.com>

	* toolbar.c (toolbar_setup): it now adds some commands to uih toolbar
	(toolbar_style): old one toolbar is created here, also uses hbox,
	so it doesn't eat all space
	- removed ToolbarData structure, store this info in ControlData
	- update all callbacks to use ControlData
	- add Undo/Redo to toolbar

	* test-html-editor-control.c (container_create): create toolbar here

2000-07-10  Larry Ewing  <lewing@helixcode.com>

	* editor-control-factory.c (release): initialize the default
	edit property type.

2000-07-08  Dan Winship  <danw@helixcode.com>

	* menubar.c (menubar_setup): Redo this a bit so it will use the
	container's existing "Edit" menu rather than creating its own new
	one. (So that it ends up ordered correctly.)

2000-07-07  Radek Doulik  <rodo@helixcode.com>

	* body.c (body_apply_cb): implemented bg pixmap setting

	* toolbar.c (setup_color_option_menu): set relief for color
	selection combo on toolbar by gnome preferences

2000-07-06  Radek Doulik  <rodo@helixcode.com>

	* toolbar.c (color_changed_cb): added signal hadler for
	insertion_color_changed signal

	* main.c (main): call gconf_init here instead of gtkhtmllib_init

	* toolbar.c (setup_color_option_menu): new function
	add color selection to toolbar
	
	* body.c (body_properties): use color_table_new

	* text.c (text_properties): use color_table_new

	* utils.c: new file
	(color_table_new): new helper function for color table creation

	* utils.h: new file

	* image.c (insert_or_apply): new helper function
	(image_apply_cb): use insert_or_apply
	(image_insert_cb): likewise

2000-07-05  Radek Doulik  <rodo@helixcode.com>

	* properties.c (gtk_html_edit_properties_dialog_new): added insert
	parameter, which tells if we want insertion or properties dialog

	* image.c (image_insert_cb): filled with old dialog code
	(image_insertion): new function, creates insertion dialog
	(image_properties): use image_insertion as base

	* link.c (link_properties): added clear button to clear URL

2000-07-03  Michael Meeks  <michael@helixcode.com>

	* persist-stream-impl.c (load): update for new read.

2000-07-04  Radek Doulik  <rodo@helixcode.com>

	* editor-control-factory.c (html_button_pressed): updated to use
	new properties dialog, now text/link/image could be 2x clicked
	(html_button_pressed): use release event instead of directly
	starting properties dialog (we wand release event of html widget
	to be processed and it wasn't because of properties dialog
	modality)
	(html_button_pressed): use object at under cursor rather than
	engine->cursor->object

2000-07-01  Radek Doulik  <rodo@helixcode.com>

	* menubar.c (insert_link_cb): rewritten using properties dialog

	* popup.c (remove_link): use cd->html->engine->cursor->object
	instead of cd->obj which could be unset

2000-06-30  Radek Doulik  <rodo@helixcode.com>

	* link.c (link_properties): fix case when we get NULL url
	
2000-06-23  Radek Doulik  <rodo@helixcode.com>

	* text.c (text_properties): set initial color
	(text_properties): fixed style setting

2000-06-21  Radek Doulik  <rodo@helixcode.com>

	* popup.c (remove_link): it now uses html_engine_remove_link and
	html_engine_remove_link_object

	* link.c (button_link_cb): use rewritten html_engine_insert_link

	* popup.c (popup_show): always add insert link to popup menu

	* link.c: remove text entry, we want only set link

2000-06-20  Radek Doulik  <rodo@helixcode.com>

	* popup.c (popup_show): added insert link to popup menu when
	selection is active

2000-06-17  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c (editor_control_factory): Create a
	PersistFile interface and add it to the control.

	* test-html-editor-control.c: `OP_LOAD' and `OP_SAVE' replaced by
	`OP_SAVE_THROUGH_PERSIST_STREAM',
	`OP_LOAD_THROUGH_PERSIST_STREAM', `OP_SAVE_THROUGH_PERSIST_FILE',
	`OP_LOAD_THROUGH_PERSIST_FILE'.  New separate menu items to
	save/load using the PersistStream or PersistFile interface.
	(save_through_persist_stream): Renamed from `save_through_stream'.
	(load_through_persist_stream): Renamed from `load_through_stream'.
	(save_through_persist_file): New.
	(save_through_persist_stream): New.
	(file_selection_ok_cb): Handle the new `OP_*' types.
	(open_through_persist_stream_cb): Renamed from `open_.
	(save_through_presist_stream_cb): Renamed from `save_as_cb'.
	(open_through_persist_file_cb): New.
	(save_through_persist_file_cb): New.

	* persist-file-impl.c: New.
	* persist-file-impl.h: New.

	* persist-stream-impl.c (load): Make non editable before feeding
	data, and make editable again after it.

2000-06-14  Radek Doulik  <rodo@helixcode.com>

	* menubar.c (properties): properties callback - runs capplet

	* Makefile.am (LDADD): removed -lgconf-gtk which was hack and is
	fixed now

	* main.c (main): call gtkhtmllib_init

2000-06-13  Radek Doulik  <rodo@helixcode.com>

	* rule.c (combo_align_cb): use _() on align
	(gtk_html_rule_dialog_new): use N_() instead of _()
	(gtk_html_rule_dialog_new): use _() for name and align

2000-06-10  Ariel Rios  <ariel@arcavia.com>

	* rule.c (combo_align_cb): Function for checking the desired
	alignment option.
	(button_rule_cb): We now use the shade and halign values from the
	code instead.
	(gtk_html_rule_dialog_new): We now point the content of the align
	const array unto the structure.  Added the signal for the check
	button.  The rule dialog is complete.
	
2000-06-10  Ariel Rios  <ariel@arcavia.com>
	
	* popup.c (prop): In the HTML_TYPE_RULE case we now pass the
	object as a parameter to rule_edit.

	* rule.c (rule_insert): Added reference to the new dialog variable
	rule and set it to NULL.
	(rule_edit): Added new HTMLRule parameter and then we pass it to
	GtkHMTLDialog.  We now also correctly set the values taken from
	the the HTMLRule object.
	(set_get_values): Replaces the old get_values function.
	(button_rule_cb): We now make distinction between inserting and
	object and editing it.
	(button_shade_cb): New call back for toggling the shade state.
	(combo_align_cb): New call back for selecting the type of rule
	alignment.

	* rule.h (rule_edit): Add HTMLRule as a parameter.
	
2000-06-09  Ariel Rios  <ariel@arcavia.com>

	* rule.c (gtk_html_rule_dialog_new): Some modifications to the
	dialog to make to look cooler and nicer.

	* popup.c (prop): Added reference so we can edit rule type. 
	(popup_show): Ditto.

2000-06-09  Ariel Rios  <ariel@arcavia.com>
	
	* Makefile.am: Include rule.c and rule.h
	
	* menubar.c: Added rule as as a member of subtree.
	(insert_rule_cb): Added.

	* control-data.c (gtk_html_control_data_destroy): Add conditional
	for rule_dialog.

	* control-data.h: Add reference to rule_dialog in
	GtkHTMLControlData.

	* rule.c: New file that contains Rule Dialog support.
	(get_values): Get the integer from the spin buttons.
	(button_rule_cb): Call back for the rule dialog.
	(gtk_html_rule_dialog_new): Creates a new GtkHTMLRuleDialog.
	(gtk_html_rule_dialog_destroy): Created
	(rule_insert): Created.
	(rule_edit): Created.

	* rule.h: Ditto.

2000-06-05  Radek Doulik  <rodo@helixcode.com>

	* popup.c (remove_link): remove link callback
	(popup_show): use remove_link

2000-06-03  Ariel Rios  <ariel@arcavia.com>

	* table.c: New file: Functions for creating and using the table
	dialog.
	(set_get_values): Set and get the table value arguments.
	(button_table_cb): Call back for the table dialog.
	(gtk_html_table_dialog_new): Creates a new GtkHTMLDialog.
	(gtk_html_link_dialog_destroy): Destroy the dialog.
	(table_insert): Insert table.
	(table_edit): Edit table.

	* table.h: Ditto.

2000-05-29  Larry Ewing  <lewing@helixcode.com>

	* persist-stream-impl.c (get_content_types): add test/plain to
	content type list.
	(save): save the requested content type.

2000-05-26  Dan Winship  <danw@helixcode.com>

	* test-html-editor-control.c (load_through_stream,
	save_through_stream):
	* persist-stream-impl.c (save_receiver, save, load,
	get_content_types): Update for PersistStream changes.

2000-05-21  Ettore Perazzoli  <ettore@helixcode.com>

	* persist-stream-impl.c (load): Updated to use `GtkHTMLStream *'
	instead of `GtkHTMLStreamHandle'.
	(load): Updated to use the new `gtk_html_begin()' with no @url.

2000-05-17  Ettore Perazzoli  <ettore@helixcode.com>

	* toolbar.c
	(editor_toolbar_left_align_cb): If the button is now inactive,
	don't do anything, because it means that the user has clicked on
	another button in the same radiogroup.
	(editor_toolbar_center_cb): Likewise.
	(editor_toolbar_right_align_cb): Likewise.
	(safe_set_active): New helper function to set a toggle button
	active without triggering the corresponding callback.
	(paragraph_alignment_changed_cb): Use it to update the buttons.
	This way we don't get a callback every time the current alignment
	changes.

2000-05-16  Larry Ewing  <lewing@helixcode.com>

	* image.c (insert): renamed html_image_set_filename to html_image_set_url.

2000-05-09  Ettore Perazzoli  <ettore@helixcode.com>

	* test-html-editor-control.c: #if 0 the unused toolbar
	GnomeUIInfo.

2000-05-08  Larry Ewing  <lewing@helixcode.com>

	* editor-control-factory.c (editor_control_factory_init): call
	gdk_rgb_init().
	(html_button_pressed): pass button 2 events through to the defautl
	handler.

2000-05-03  Radek Doulik  <rodo@helixcode.com>

	* link.c (link_edit): hide text input - we don't want edit it now
	& here as it doesn't work and could be edited right in editor

	* editor-control-factory.c (html_button_pressed): added missing
	link_edit call when 2xclick

	* link.c (button_link_cb): fixed type (link instead of
	d->html_link)

2000-05-03  Jacob Berkman  <jacob@helixcode.com>

	* Makefile.am (oaf_DATA): if using oaf, actually install oaf and not
	gnorba

2000-05-02  Michael Meeks  <michael@helixcode.com>

	* html-editor-control.oafinfo: correct supported_mime_types to stringv

2000-04-29  Maciej Stachowiak  <mjs@eazel.com>

	* html-editor-control.oafinfo: Added most standard OAF attributes
	that apply, and corrected repo_ids to include all supported
	interfaces and exclude hackish pseudo-ids.

2000-04-28  Radek Doulik  <rodo@helixcode.com>

	* editor-control-factory.c (html_button_pressed): in case we show
	popup menu, stop signal emiting

	* popup.[ch]: new file - popup menu for html widget/objects
	(popup_show): new function, shows popup menu after button press
	event

2000-04-28  Ettore Perazzoli  <ettore@helixcode.com>

	* main.c: Don't #include <libgnorba/gnorba.h> when we really don't
	need it.

2000-04-27  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c: New #define `CONTROL_FACTORY_ID',
	depending on whether we are `USING_OAF' or not.
	(editor_control_factory_init): Use `CONTROL_FACTORY_ID'.

	* test-html-editor-control.c: New #define
	`HTML_EDITOR_CONTROL_ID'; conditional on whether we are
	`USING_OAF' or not.
	(container_create): Use `HTML_EDITOR_CONTROL_ID' instead of an
	hardcoded value.
	(init_corba): New function, conditionally implemented according to
	`USING_OAF'.
	(init
	(main): Use `init_corba()'.

	* main.c (init_corba): New function, different compilation
	according to the `USING_OAF' #define.
	(init_bonobo): Use `init_corba()'.

	* Makefile.am: Updated to install the OAF stuff.

	* html-editor-control.oafinfo: New file for OAF.

2000-04-28  Radek Doulik  <rodo@helixcode.com>

	* image.c (image_edit): new function to use image dialog for
	editing, it sets image parameters and dialog->image, so we could
	later change image_parameters thru new htmlimage setting functions

	* editor-control-factory.c (html_button_pressed): new handler to
	for button press event in html widget (now it calls edit dialog for
	image)
	(editor_control_factory): connect button press event handler

2000-04-27  Radek Doulik  <rodo@helixcode.com>

	* dialog.c (run_dialog): use gtk_widget_show instead of
	gnome_dialog_run

	* link.c (gtk_html_link_dialog_new): set table col spacings

	* replace.c (gtk_html_replace_dialog_new): likewise

2000-04-25  Radek Doulik  <rodo@helixcode.com>

	* image.c (gtk_html_image_dialog_new): set sensitive for OK button

	* link.c (set_entries): new function, trying to be clever about
	links :)
	(gtk_html_link_dialog_new): link dialog
	(insert_link): run link dialog

2000-04-24  Radek Doulik  <rodo@helixcode.com>

	* replace.c (replace): use RUN_DIALOG

	* search.c (search): use RUN_DIALOG

	* image.c (insert_image): use RUN_DIALOG

	* dialog.c (run_dialog): creates and runs/raises dialog

	* dialog.[ch]: new files, some general dialogs util(s)

	* editor-control-factory.c (set_frame_cb): set automatic policy
	for scrolled_window

	* Makefile.am (html_editor_control_SOURCES): added search.[ch],
	replace.[ch], image.[ch] files

	* search.c (search): new function, replacing one in gtkhtml.c
	(search_next):  new function, replacing gtk_html_search_next in gtkhtml.c

	* image.c:  new file, moved from gtkhtml/src/gtkhtml-edit-image.c
	(gtk_html_image_dialog_new): commented out halignment
	setting (left/right)
	(insert_image): new function, replacing gtk_html_insert_image

	* image.h:  new file, moved from gtkhtml/src/gtkhtml-edit-image.h

	* replace.c: new file, moved from gtkhtml/src/gtkhtml-replace.c
	(gtk_html_replace_dialog_new): replace ask dialog moved to replace
	dialog
	(replace): new function, replacing gtk_html_replace

	* replace.h: new file, moved from gtkhtml/src/gtkhtml-replace.h

	* search.c: new file, moved from gtkhtml/src/gtkhtml-search.c

	* search.h: new file, moved from gtkhtml/src/gtkhtml-search.h

	* toolbar.c (toolbar_setup): use control data

	* menubar.c (menubar_setup): use control data

	* editor-control-factory.c (editor_control_factory): use
	control_data instead of set_frame_data
	(editor_control_factory): connect to bonobo object destroy to
	destroy control_data

	* control-data.c (gtk_html_control_data_new): new ctor
	(gtk_html_control_data_destroy): new dtor

	* control-data.h: new file, contains control_data struct which
	holds out control data as html, vbox, dialogs

2000-04-21  Radek Doulik  <rodo@helixcode.com>

	* menubar.c: added menu subtree insert with items Image and Link
	plus new callbacks

2000-04-20  Radek Doulik  <rodo@helixcode.com>

	* menubar.c: use ITALIC and UNDERLINE menu items instead of 3xBOLD
	added edit_subtree_info with Cut/Copy/Paste|Search/Search
	regex/Search again/Replace
	(menubar_setup): use _list functions instead of _tree ones as we
	have more menu subtrees now :)
	(menubar_setup): once more changed :) use _list_with_data to pass
	html thru
	(undo_cb): new callback
	(redo_cb): likewise
	(cut_cb): likewise
	(copy_cb): likewise
	(paste_cb): likewise
	(search_cb): likewise
	(search_regex_cb): likewise
	(search_next_cb): likewise
	(replace_cb): likewise

	* test-html-editor-control.c (container_create): create control
	after menu is prepared

2000-03-12  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c: Removed `MAKE_VBOX_CONTROL' #define as
	the bug is gone.  Apparently GtkOptionMenu likes to queue resizes
	on the parent even when not needed.  We now avoid recalculating
	the toolbars and reflowing paragraphs unless the size has actually
	changed, so the bug is gone.

2000-03-08  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c
	(MAKE_VBOX_CONTROL): New #define.  If this is not #defined, we
	just put the GtkHTML widget into a scrolled window and make it a
	control.  Otherwise, we create a vbox and put the scrolled window
	with the GtkHTML widget and the toolbar in it.  Using the vbox
	slows the whole widget down greatly, and I have no idea why.

2000-03-03  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c (editor_control_factory): Call
	`gtk_html_load_empty()' on the widget to make it an empty document
	after its created.

2000-03-01  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c (uih_hack_cb): Do not create the
	toolbar here anymore.
	(uih_hack_cb): Removed.
	(editor_control_factory): Create the toolbar here.  Put the
	toolbar and the GtkHTML widget into a vbox.  Create the menu bar
	here too.
	(set_frame_cb): Removed.

	* toolbar.c (toolbar_setup): Return a `GtkWidget *' with the
	toolbar that we want to add, fixed on top of the GtkHTML
	component.
	(create_editor_toolbar): Return the raw `GtkWidget' instead of a
	`Bonobo_Control'.

2000-02-26  Ettore Perazzoli  <ettore@helixcode.com>

	* toolbar.c: Implemented buttons to indent paragraphs more or
	less.  Actually make the center/left/right alignment buttons
	behave as expected.  Added cut/copy/paste toolbar buttons.

2000-02-24  Ettore Perazzoli  <ettore@helixcode.com>

	* toolbar.c (create_editor_toolbar): Add the paragraph style
	GtkOptionMenu before everything else.

2000-02-22  Ettore Perazzoli  <ettore@helixcode.com>

	* toolbar.c (insertion_font_style_changed_cb): New function.
	(create_editor_toolbar): Connect it to the
	"insertion_font_style_changed_cb" signal.

	* toolbar.c: (editor_toolbar_bold_cb): Use the new style mask
	system.
	(editor_toolbar_italic_cb): Likewise.
	(editor_toolbar_underline_cb): Likewise.
	(editor_toolbar_strikeout_cb): Likewise.

2000-02-16  Dan Winship  <danw@helixcode.com>

	* editor-control-factory.c (editor_control_factory): Update for
	latest round of interface changes.
	* test-html-editor-control.c (container_create): likewise
	* html-editor-control.gnorba: likewise

2000-02-15  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* Makefile.am: Add GNOME_EXTRA_CFLAGS to the INCLUDES.

2000-02-14  Ettore Perazzoli  <ettore@helixcode.com>

	* toolbar.c: Implemented the paragraph style menu.

2000-02-01  Ettore Perazzoli  <ettore@helixcode.com>

	* editor-control-factory.c: Set up the UI Handler.

	* test-html-editor-control.c: Updated to support the Bonobo UI
	Handler.

	* menubar.c: New file.
	* menubar.h: New file.

	* toolbar.c: New file.
	* toolbar.h: New file.

2000-01-26  Ettore Perazzoli  <ettore@helixcode.com>

	* All files: Updated according to the new Bonobo naming changes.

2000-01-25  Ettore Perazzoli  <ettore@helixcode.com>

	* test-html-editor-control.c: Added a "Save As..." menu item and its
	implementation.

	* persist-stream-impl.c (save): Implemented.

	* test-html-editor-control.c (container_create): Abort if we
	cannot get the control.

2000-01-25  Ettore Perazzoli  <ettore@helixcode.com>

	* test-html-editor-control.c: New file.

	* main.c: New file.

	* persist-stream-impl.c: New file.
	* persist-stream-impl.h: New file.

	* editor-control-factory.c: New file.
	* editor-control-factory.h: New file.
